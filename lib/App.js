// Generated by CoffeeScript 1.10.0
(function() {
  var ActionController, FeedbackController, FrameController, GestureController, Leap, YAML, defaultProfile, fs, loadProfile, robot;

  Leap = require('leapjs');

  robot = require('robotjs');

  YAML = require('yamljs');

  fs = require('fs');

  FeedbackController = require('./FeedbackController');

  ActionController = require('./ActionController');

  GestureController = require('./GestureController');

  FrameController = require('./FrameController');

  defaultProfile = 'etc/config.yml';

  loadProfile = function(profile) {
    var actionHero, config, consume, feedback, frameController, leapController, translator;
    console.log("Load profile " + profile);
    config = YAML.parse(fs.readFileSync(profile, 'utf8'));
    console.log("loaded config: ", config);
    feedback = void 0;
    actionHero = void 0;
    translator = void 0;
    frameController = void 0;
    feedback = new FeedbackController(config);
    actionHero = new ActionController(config, feedback);
    translator = new GestureController(config, feedback, actionHero);
    frameController = new FrameController(config, translator);
    leapController = new Leap.Controller({
      inBrowser: false,
      enableGestures: true,
      frameEventName: 'deviceFrame',
      background: true,
      loopWhileDisconnected: false
    });
    console.log("Connecting Leap Controller");
    leapController.connect();
    console.log("Leap Controller connected");
    consume = function() {
      var frame;
      frame = leapController.frame();
      if (frame === null) {
        return;
      }
      return frameController.processFrame(frame);
    };
    setInterval(consume, config.interval);
    return "Foo..";
  };

  loadProfile(defaultProfile);

}).call(this);
